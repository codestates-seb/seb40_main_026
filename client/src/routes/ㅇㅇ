안녕하세요 저는 프론트엔드 박민경입니다. 저는 이번 프로젝트에서로그인, 회원가입, 모여봐요 페이지,  레이아웃 헤더, 풋터를 담당하였습니다. 



반응형으로 구현하기 위해 레이아웃에서 헤더는 태블릿과 모바일 화면에서는 모달 메뉴로 바뀌고,
로그인 상태와 비로그인 상태에 따라 보이는 메뉴가 다르도록 구현하였습니다. 

- [ ] 테마색상과 로고는 초등학생 대상자에 맞게 통통튀고 밝은 느낌을 표현하는 노랑, 파랑, 핑크색을 사용하였고, 저희팀 이름처럼 코딩으로 처음 이륙하는 발판이 되었으면 하는 생각에서 비행기 아이콘을 사용하였습니다. 

회원가입과 로그인은 서비스 대상자에 따른 분리가 필요했기 때문에 학생과 선생님으로 나누고, 이를 불린값으로 닉네임, 이메일, 비밀번호와 함께 axios post 요청 데이터에 포함시켰습니다.
로그인은 요청이 성공적으로 이루어지면 액세스토큰을 로컬스토리지에 저장하는 방식으로 구현하였습니다. 
또한 맨 처음 회원가입을 했을 경우, 성공적으로 응답을 받을 경우 바로 login axios 요청을 통해 자동로그인될 수 있도록 구현하였고,
회원가입 및 로그인 유효성을 검증은 react-toastify를 사용해서 보다 동적이고 화면에 나타낼 수 있도록 하였습니다.
또한 private route 컴포넌트를 만들어 로그인 여부에 따라 접근할 수 있는 라우트를 구분하였고, useLocation을 사용하여 로그인 이후에 홈으로 무조건 이동시키는 것이 아니라 바로 접근하려던 페이지로 돌아갈 수 있도록 하였습니다. 

로그인과 회원가입 구현과 관련해서는 크게 2가지 부분이 중요하다는 것을 알게되었습니다. 
첫번째로는 UX입니다. 회원가입과 로그인은 생각보다 ux가 중요한 부분입니다. 사용자들은 비회원으로 사이트를 이용하다가 회원가입을 하게 되는데, 사이트의 필요성을 느끼더라도 회원가입에서 불편함을 느끼면 즉시 서비스 이용 자체를 중단해버립니다. 따라서 회원가입에서는 필수 정보만을 받고 추후에 필요시에 업데이트하도록 유도하기도 하고 oauth 같이 즉시 회원가입이 가능하도록 하는 방식이 중요하다는 것을 알게되었습니다. 
또한 로그인의 화면 역시 ux를 고려하는 것이 중요한데, 유효성 검사와 같은 경우는 필요한 정보를 뭉텅거리지 않고 세세하게 체크하여 화면에 피드백하여 사용자가 빠르게 회원가입을 진행하도록 하는 것이 필요합니다. 
로그인이 필요한 페이지에서도 사용자가 ux에 불편함을 느끼지 않도록 로그인 이후 해당 페이지로 바로 연결하는 것이 중요합니다. 
비밀번호를 숨기고 보이는 기능 역시 매우 간단한 기능임에도 없으면 사용자의 UX에 좋지 않은 경험을 줄 수 있기 때문에 신경쓰는 것이 좋다고 생각했습니다. 

두 번째로는 보안과 관련된 부분입니다.
이번 프로젝트는 jwt토큰을 로컬스토리지에 저장하는 방식으로 구현하였는데, 보안상 로컬스토리지와 쿠키는 각각의 장단점이 있고 각각의 방식에서 이를 보완하는 방법을 찾는 것이 중요합니다. 
로컬스토리지를 이용하여 토큰을 저장하는 방식은 쿠키보다 훨씬 편리하게 토큰을 저장할 수 있는 방법입니다. 하지만 로컬스토리지는 xss공격에 너무 취약하고 이를 보완하기가 어렵다는 단점이 있습니다. 따라서 쿠키에 jwt토큰을 저장하고 httpOnly 옵션을 이용한면 좀더 보완된 방식으로 구현할 수 있습니다. 
다만 로컬스토리지와는 달리 쿠키는 서버에서 쿠키를 이용할 수 있어야 하기 때문에 서버와의 의사소통과 이해가 중요한 부분이라는 것을 알게되었습니다. 
저 역시 이 프로젝트에서도 처음 계획과 달리 서버와의 통신에 막히는 부분이 있어 로컬스토리지로 구현하게 되었는데
이 부분은 더 공부하여 원래 의도했던 방식으로도 구현해보고 싶습니다. 카카오로그인과 선생님과 학생 롤 롤에 맞는 페이지 구현 확장 역시 시간 상 구현을 마치지 못하였는데, 이 부분도 추후에 더 공부하도록 하겠습니다. 감사합니다.
